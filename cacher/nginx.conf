user nginx;
worker_processes 8;
#load_module modules/ngx_http_js_module.so;

error_log /dev/stderr warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    resolver 192.168.1.1 ipv6=off;
    #js_import headers.js;
    #js_set $headers_json headers.headers_json;
    #log_format main '$headers_json [$time_local] $upstream_cache_status "$request" $status $body_bytes_sent';

    log_format main '[$time_local] $upstream_cache_status "$request" $status $body_bytes_sent';
    access_log /dev/stdout main;

    #root /var/cache/nginx;
    root /srv/git;
    proxy_cache_path  /var/cache/nginx/deb/data inactive=99y use_temp_path=off keys_zone=DEB_DATA:100m;
    proxy_cache_path  /var/cache/nginx/deb/ctrl inactive=99y use_temp_path=off keys_zone=DEB_CTRL:100m;
    proxy_cache_path  /var/cache/nginx/pip/data inactive=99y use_temp_path=off keys_zone=PIP_DATA:100m;
    proxy_cache_path  /var/cache/nginx/pip/ctrl inactive=99y use_temp_path=off keys_zone=PIP_CTRL:100m;
    proxy_cache_valid 200 302 99y;
    proxy_cache_key   $uri;

    proxy_ignore_headers Set-Cookie Expires Cache-Control;
    proxy_hide_header Set-Cookie;
    proxy_hide_header Expires;
    proxy_hide_header Cache-Control;

    server {
        #listen 127.0.0.1:80;
        proxy_ssl_server_name on;

        #######
        # DEB #
        #######
        location ~ ^/ubuntu(-ports)?/dists/(.*)$ {
            proxy_pass  $scheme://$host$request_uri;
            proxy_cache DEB_CTRL;
            proxy_cache_valid 200 302 4h;
        }

        location ~ ^/ubuntu(-ports)?/pool/(.*)$ {
            proxy_pass  $scheme://$host$request_uri;
            proxy_cache DEB_DATA;
        }


        #######
        # PIP #
        #######
        location ~ ^/packages/(.*)$ {
            proxy_pass  https://files.pythonhosted.org:443$request_uri;
            proxy_cache PIP_DATA;
        }

        location ~ ^/(search|pypi|simple) {
            proxy_pass https://pypi.org:443$request_uri;

            # TODO: Instead of blanking the Accept-Encoding we should
            #       gunzip/modify/gzip the response conditionally depending on
            #       the Accept-Encoding
            proxy_set_header Accept-Encoding "";

            # Modify all links in response to use http://proxycache instead of
            #                                     https://files.pythonhosted.org
            sub_filter_once off;
            sub_filter_types "application/vnd.pypi.simple.v1+json";
            sub_filter https://files.pythonhosted.org http://proxycache;

            # Re-gzip the response if the accept-encoding was set
            #gzip on;
            #gzip_types "application/vnd.pypi.simple.v1+json";

            proxy_cache PIP_CTRL;
            proxy_cache_valid 200 302 4h;
        }

        ##########
        # GitHub #
        ##########
        # TODO: work for all github/gitlab/opendev?
        location ~ \.git$ {
            #auth_basic "Restricted";
            #auth_basic_user_file /etc/nginx/.gitpasswd;
            fastcgi_pass  unix:/var/run/fcgiwrap.socket;
            include       fastcgi_params;
            fastcgi_param SCRIPT_FILENAME /usr/lib/git-core/git-http-backend;
            # export all repositories under GIT_PROJECT_ROOT
            fastcgi_param GIT_HTTP_EXPORT_ALL "";
            fastcgi_param GIT_PROJECT_ROOT    /srv/git;
            fastcgi_param PATH_INFO           $uri;
        }
    }
}
